#include <stdio.h>
 

int findFirstOccurrence(int arr[], int n, int x)
{

    int low = 0, high = n - 1;
 
    int result = -1;
 
    while (low <= high)
    {
        int mid = (low + high)/2;
 
        if (x == arr[mid])
        {
            result = mid;
            high = mid - 1;
        }
 
        else if (x < arr[mid]) {
            high = mid - 1;
        }
 
        else {
            low = mid + 1;
        }
    }
 
    return result;
}
int findLastOccurrence(int A[], int N, int x)
{
    int low = 0, high = N - 1;
 
    int result = -1;
 
    while (low <= high)
    {
        int mid = (low + high)/2;
 
        
        if (x == A[mid])
        {
            result = mid;
            low = mid + 1;
        }
 
        else if (x < A[mid]) {
            high = mid - 1;
        }
        else {
            low = mid + 1;
        }
    }
 
    return result;
}
 

 
int main()
{
    int arr[] = {2, 5, 5, 5, 6, 6, 8, 9, 9, 9};
    int n = sizeof(arr)/sizeof(arr[0]);
    int c=0,target;
    printf("enter target element:\n");
    scanf("%d",&target);
    for(int i=0;i<n;i++)
    {
        if(arr[i]==target)
        c++;
    }
 
    int index1 = findFirstOccurrence(arr, n, target);
    int index2 = findLastOccurrence(arr,n,target);
    if (index1 != -1)
    {
        printf("The first occurrence of element %d is located at index %d",
                target, index1);
        printf("\nThe last occurrence of element %d is located at index %d",
                target, index2);
        printf("\ncount=%d",c);        
                
    }
    else {
        printf("\nElement not found in the array");
        printf("\nThe first occurrence of element %d is located at index %d",
                target, index1);
        printf("\nThe last occurrence of element %d is located at index %d",
                target, index2);
        printf("\ncount=%d",c);         
    }
 
    return 0;
}
